% Вариант № 7
% f(x)=10*x*log(x)-(x^2/2), при 0.1 < x < 1.0
% e=0.0001
% посмотрим график
ezplot ('10*x*log(x)-(x^2/2)', [0.1 1.0])
hold on
format long
% 1. Метод перебора
% по графику видно, что минимум функции находится между x=0.3 и x=0.5
f = @(x) 10*x*log(x)-(x^2/2) % наша функция
h = 0.00001; % задаем шаг
x = 0.3; % начальное приближение
i = 0; % счетчик итераций
while f(x+h) <= f(x) % пока условие выполняется, ф-я убывает
 x = x + h;
 i = i + 1;
end
disp('1. Метод перебора, x= :')
disp(x) % решение - точка, когда ф-я стала возрастать (x=0.3822)
disp('затрачено итераций, i= :')
disp(i) % 0.3822
% 2. Метод поразрядного поиска
e = 0.00001; % заданная погрешность
h = 0.01; % задаем первоначальный шаг
x = 0.3; % начальное приближение
i = 0; % счетчик итераций
while h > e
 while f(x+h) <= f(x) % пока условие выполняется, ф-я убывает
 x = x + h;
 i = i + 1;
 end
 %disp(x)
 h = h/10; % уменьшаем шаг и повторяем цикл
end
disp('2. Метод поразрядного поиска, x= :')
disp(x) % решение, точка, когда ф-я стала возрастать, x=0.3822
disp('затрачено итераций, i= :')
disp(i) % 12
% 3. Метод дихотомии
e = 0.00001; % заданная погрешность
a = 0.3; % задаем начальный отрезок [a,b]
b = 0.5;
i=0; % счетчик итераций
while (b-a)/2 > e % пока не добьемся требуемой точности
 x1 = (a+b+e)/2; % вычисляем окрестности середины отрезка
 x2 = (a+b-e)/2;
 if f(x1) > f(x2) % вычисляем значения ф-и в этих точка и сравниваем
 b=x2; % задаем новый отрезок
 else
 a=x1; % задаем новый отрезок
 end
 i = i+1;
end
disp('3. Метод дихотомии, x= :')
disp((x1+x2)/2)
disp('затрачено итераций, i= :')
disp(i) % 13
% 4. Метод золотого сечения
e = 0.00001; % заданная погрешность
a = 0.3; % задаем начальный отрезок [a,b]
b = 0.5;
i=0; % счетчик итераций
r=(sqrt(5)+1)/2; % золотой коэффициент
a=0.3; % начальные точки
b=0.5;
e=0.00001;
a2= a;
b2= b;
while abs(b-a) >= e % пока погрешность больше требуемой
 x1= b-(b-a)/r;
 x2= a+(b-a)/r;
 y1= f(x1);
 y2= f(x2);
 if y1 >= y2
 a=x1;
 else b=x2;
 end
i=i+1;
end
disp('4. Метод золотого сечения, x= :')
x=(a+b)/2;
disp(x)
disp('затрачено итераций, i= :')
disp(i)
% 5. Метод парабол
e=0.00001; % заданная погрешность
x0 = 0.3; % начальное приближение
delta=0.01;
dx=0.0001;
h=0.5*dx;
i=0; % счётчик итераций
while delta>e
 f1=f(x0+dx);
 f2=f(x0);
 f3=f(x0-dx);
 x=x0-h*(f1-f3)/(f1-2*f2+f3); % получаем новый минимум
 delta=abs(x-x0);
 x0=x;
 i=i+1;
end;
disp('5. метод парабол, x= :')
disp(x0)
disp('затрачено итераций, i= :')
disp(i) 